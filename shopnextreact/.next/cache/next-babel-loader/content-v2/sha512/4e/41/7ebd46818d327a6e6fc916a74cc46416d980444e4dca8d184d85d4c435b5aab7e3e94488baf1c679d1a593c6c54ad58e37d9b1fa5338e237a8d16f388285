{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\mathi\\\\outronicshop\\\\shopnextreact\\\\pages\\\\BrandPage.js\";\n\n// posts will be populated at build time by getStaticProps()\nfunction BrandPage({\n  brands\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: brands.map(brand => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: brand.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: brand.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 7\n  }, this);\n} // This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries. See the \"Technical details\" section.\n\n\nexport async function getBrandsAsync() {\n  // Call an external API endpoint to get brands.\n  // You can use any data fetching library\n  const res = await fetch('https://localhost:5001/api/brands');\n  const brands = await res.json(); // By returning { props: { brands } }, the Blog component\n  // will receive `brands` as a prop at build time\n\n  return {\n    props: {\n      brands\n    }\n  };\n}\nexport default BrandPage;","map":{"version":3,"sources":["C:/Users/mathi/outronicshop/shopnextreact/pages/BrandPage.js"],"names":["BrandPage","brands","map","brand","name","id","getBrandsAsync","res","fetch","json","props"],"mappings":";;;AAAA;AACA,SAASA,SAAT,CAAmB;AAAEC,EAAAA;AAAF,CAAnB,EAA+B;AAC3B,sBACE;AAAA,cACGA,MAAM,CAACC,GAAP,CAAYC,KAAD,iBACR;AAAA,6BACI;AAAA,gCACI;AAAA,oBAAKA,KAAK,CAACC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,oBAAKD,KAAK,CAACE;AAAX;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADH;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,C,CAED;AACA;AACA;;;AACA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AACA;AACA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,mCAAD,CAAvB;AACA,QAAMP,MAAM,GAAG,MAAMM,GAAG,CAACE,IAAJ,EAArB,CAJqC,CAMrC;AACA;;AACA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLT,MAAAA;AADK;AADF,GAAP;AAKD;AAED,eAAeD,SAAf","sourcesContent":["// posts will be populated at build time by getStaticProps()\r\nfunction BrandPage({ brands }) {\r\n    return (\r\n      <ul>\r\n        {brands.map((brand) => (\r\n            <li>\r\n                <ul>\r\n                    <li>{brand.name}</li>\r\n                    <li>{brand.id}</li>\r\n                </ul>\r\n            </li>\r\n        ))}\r\n      </ul>\r\n    )\r\n  }\r\n  \r\n  // This function gets called at build time on server-side.\r\n  // It won't be called on client-side, so you can even do\r\n  // direct database queries. See the \"Technical details\" section.\r\n  export async function getBrandsAsync() {\r\n    // Call an external API endpoint to get brands.\r\n    // You can use any data fetching library\r\n    const res = await fetch('https://localhost:5001/api/brands')\r\n    const brands = await res.json()\r\n  \r\n    // By returning { props: { brands } }, the Blog component\r\n    // will receive `brands` as a prop at build time\r\n    return {\r\n      props: {\r\n        brands,\r\n      },\r\n    }\r\n  }\r\n  \r\n  export default BrandPage"]},"metadata":{},"sourceType":"module"}